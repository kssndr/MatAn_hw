{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Тема 6 “Понятие о производной”"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Найти производную выражения:"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "a) \n",
    "\n",
    "sin x cos x = cos x cos x + sin x (- sin x) = cos^2 x - sin^2 x"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "b) \n",
    "\n",
    "ln (2x |1)^3 = (1/(2x)^3)(3*2x^2) = 6x^2/2x^3=3/x при x=1 ответ: 3"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "c) \n",
    "\n",
    "(sin^2(ln(x^3)))^1/2\n",
    "\n",
    "упростим - избавимся от корня и квадрата, предположим что x положительное вещественное число\n",
    "\n",
    "sin(ln(x^3)) = cos(ln(x^3)) 1/x^3 3x2 = 3cos(ln(x^3))/x"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "d)\n",
    "\n",
    "x^4/ln(x) = (4x^3 ln(x) - x^4 1/x)/(lnx)^2 = 2x^3 ln x/(lnx)^2 = 2x^3/lnx"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Найти выражение производной функции и ее значение в точке:"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "f(x) =  cos(x^2 + 3x), x0 = (pi)^1/2\n",
    "\n",
    "f(x) =  cos(x^2 + 3x) = -sin(x^2 + 3x)(2x + 3)\n",
    "\n",
    "f(x0) = -sin(pi + 3(pi^1/2))(2(pi^1/2) + 3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-5.383302410890619\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "pi = np.pi\n",
    "print(np.sin(-(pi + 3*(pi**(1/2))))*(2*(pi**(1/2)) + 3))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. * Найти значение производной функции в точке:"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "f(x) =  (x^3 - x^2 - x -1)/(1+2x + 3x^2 - 4x^3), x0 = 0\n",
    "\n",
    "f'(x) = (u/s)'=u's-us'/s^2\n",
    "\n",
    "u(x)=(x^3 - x^2 - x -1), u'=(3x^2 - 2x -1)\n",
    "s(x)=(1+2x + 3x^2 - 4x^3), s'= (2+6x-12x^2)\n",
    "\n",
    "f'(x) = (3x^2 - 2x -1)(1+2x + 3x^2 - 4x^3) - (x^3 - x^2 - x -1)(2+6x-12x^2)/(1+2x + 3x^2 - 4x^3)^2\n",
    "\n",
    "упростим числитель раскрыв скобки сперва вычитаемого, затем вычитаемое:\n",
    "вычитаемого:\n",
    "(3x^2 - 2x -1)(1+2x + 3x^2 - 4x^3) = 3x^2+6x^3+9x^4-12x^5-2x-4x^2-6x^3+8x^4-1-2x-3x^2+4x^3=\n",
    "=-12x^5 + 17x^4 +4x^3 -4x^2 - 4x - 1\n",
    "\n",
    "вычитаемое:\n",
    "(x^3 - x^2 - x -1)(2+6x-12x^2) = 2x^3+6x^4-12x^5-2x^2-6x^3+12x^4-2x-6x^2+12x^3-2-6x+12x^2=\n",
    "= -12x^5 + 18x^4 + 8x^3 + 4x^2 - 8x - 2\n",
    "\n",
    "произведем вычитание (раскроем скобки):\n",
    "-12x^5 + 17x^4 +4x^3 -4x^2 - 4x - 1 - (-12x^5 + 18x^4 + 8x^3 + 4x^2 - 8x - 2) =\n",
    "\n",
    "=-12x^5 + 17x^4 +4x^3 -4x^2 - 4x - 1 + 12x^5 - 18x^4 - 8x^3 - 4x^2 + 8x + 2 =\n",
    "\n",
    "= (1 + 4x - 8x^2 - 4x^3 -x^4)/(1 + 2x + 3x^2 - 4x^3)^2\n",
    "\n",
    "f(x0)=1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. Найти угол наклона касательной к графику функции в точке:"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "f(x) = (3x)^1/2 ln x, x0 = 1\n",
    "\n",
    "f'(x0)=tga\n",
    "\n",
    "f'(x) = ((3x)^1/2 )'ln x + (3x)^1/2 (ln x)' = 1/2 (3x)^(-1/2) lnx + (3x)^1/2 1/x = \n",
    "=lnx/(2(3x)^1/2 + (3x)^1/2/x\n",
    "\n",
    "упростим - под общий знаменатель:\n",
    "\n",
    "(xlnx + 2 3x)/(2x (3x)^1/2)=(lnx +6)/2(3x)^1/2\n",
    "\n",
    "f'(x0) = (ln1 +6)/2(3*1)^1/2 = 0 + 6/2(3)^1/2 = 3/(3)^1/2\n",
    "\n",
    "arctg(3/(3)^1/2) = pi/3 = 60 \n",
    "\n",
    "или\n",
    "\n",
    "3/(3)^1/2 = (3)^1/2 (оказывается)\n",
    "\n",
    "тогда:\n",
    "arctg(3^1/2) = pi/3 = 60 \n",
    "\n",
    "(уровнение касательной = f'(x0)(x-x0)+f(x0))\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
